name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    
permissions:
  id-token: write
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    env:
        AWS_ACCESS_KEY_ID: dummy
        AWS_SECRET_ACCESS_KEY: dummy
        AWS_REGION: ${{ vars.AWS_REGION }}
        MI_EVENTS_SQS_QUEUE_FOR_EVENT_ENRICHMENT_URL: http://localhost:4566/000000000000/fake-queue
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Run Tests
        run: ./gradlew test --no-daemon

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: test
    environment: dev
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ${{ github.sha }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Build
      run: gradle assemble

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume:  ${{ secrets.AWS_ASSUME_ROLE }}
        role-skip-session-tagging: true
        aws-region: ${{ vars.AWS_REGION }}
        mask-aws-account-id: true

    - name: Get ECR login
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build & push Docker image
      env:
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
      run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REPOSITORY:latest .
          docker push $ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REPOSITORY:latest
