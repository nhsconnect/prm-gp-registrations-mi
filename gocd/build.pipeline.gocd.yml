format_version: 4
pipelines:
  'prm-gp-registrations-mi':
    group: gp-registrations-mi
    label_template: '${git[:8]}'
    materials:
      git:
        type: configrepo
        blacklist:
          - docs/**/*.*
    stages:
      - test:
          clean_workspace: true
          jobs:
            test_unit:
              resources:
                - docker
              artifacts:
                - build:
                    source: build
              tasks:
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - ./tasks test_unit
            test_integration:
              resources:
                - docker
              artifacts:
                - build:
                    source: build
              tasks:
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - ./tasks test_integration
            test_coverage:
              artifacts:
                - build:
                    source: build/reports/jacoco
              tabs:
                coverage: jacoco/test/html/index.html
              resources:
                - docker
              tasks:
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - ./tasks test_coverage
            code_quality:
              artifacts:
                - build:
                    source: build/reports/spotbugs
              tabs:
                MainCodeQa: spotbugs/main/spotbugs.html
                TestCodeQa: spotbugs/test/spotbugs.html
                ITestCodeQa: spotbugs/integrationTest/spotbugs.html
              resources:
                - docker
              tasks:
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - ./tasks code_quality
      - build:
          clean_workspace: true
          jobs:
            build:
              resources:
                - docker
              artifacts:
                - build:
                    source: build
              tasks:
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - ./tasks build
      - publish_docker:
          clean_workspace: true
          jobs:
            build:
              resources:
                - docker
              tasks:
                - fetch:
                    stage: build
                    job: build
                    source: build
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - IMAGE_TAG=$GO_PIPELINE_LABEL ./tasks publish_docker