plugins {
	id 'org.springframework.boot' version '2.5.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
	id 'org.owasp.dependencycheck' version '6.5.0.1'
	id 'com.github.spotbugs' version '4.7.4'
}

group = 'com.prm-gp-registrations-mi'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

//Without this task two jars are built, the additional "-plain.jar" is not needed
// for more details refer to: https://docs.spring.io/spring-boot/docs/current/gradle-plugin/reference/htmlsingle/#packaging-executable.and-plain-archives
jar {
	enabled = false
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springdoc:springdoc-openapi-ui:1.5.10'
	implementation 'com.amazonaws:aws-java-sdk-s3:1.11.792'
	compileOnly 'org.projectlombok:lombok:1.18.20'
	annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'com.github.spotbugs:spotbugs-annotations:3.1.2'
	implementation 'com.googlecode.json-simple:json-simple:1.1.1'
}

tasks.withType(Test) {
	useJUnitPlatform()
}

jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
}

jacocoTestCoverageVerification {
	dependsOn jacocoTestReport

	violationRules {
		rule {
			limit {
				minimum = 0.8
			}
		}
	}
}

dependencyCheck {
	failBuildOnCVSS = 7
	suppressionFile = './dependency-checks-suppression.xml'
}

spotbugsMain {
	reports {
		html {
			enabled = true
			destination = file("$buildDir/reports/spotbugs/main/spotbugs.html")
			stylesheet = 'fancy-hist.xsl'
		}
	}
}

spotbugsTest {
	reports {
		html {
			enabled = true
			destination = file("$buildDir/reports/spotbugs/test/spotbugs.html")
			stylesheet = 'fancy-hist.xsl'
		}
	}
}
